apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: grafana
spec:
  interval: 10m
  chart:
    spec:
      chart: grafana
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: grafana
  install: { remediation: { retries: 3 } }
  upgrade: { remediation: { retries: 3 } }
  values:
    service:
      type: ClusterIP
    admin:
      existingSecret: grafana-admin
      userKey: admin-user
      passwordKey: admin-password
    grafana.ini:
      server:
        root_url: http://localhost:3000
      auth:
        disable_login_form: false
        disable_signout_menu: false
      auth.generic_oauth:
        enabled: true
        name: Keycloak
        allow_sign_up: true
        scopes: openid email profile
        auth_url: http://localhost:8080/realms/demo/protocol/openid-connect/auth
        token_url: http://keycloak.keycloak.svc.cluster.local/realms/demo/protocol/openid-connect/token
        api_url: http://keycloak.keycloak.svc.cluster.local/realms/demo/protocol/openid-connect/userinfo

    envValueFrom:
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID:
        secretKeyRef:
          name: grafana-oauth
          key: client-id
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET:
        secretKeyRef:
          name: grafana-oauth
          key: client-secret
    sidecar:
    datasources:
      enabled: true
    dashboards:
      enabled: true
      # kube-prometheus-stack legt Dashboards als ConfigMaps mit Label 'grafana_dashboard' ab
      label: grafana_dashboard
      searchNamespace: ALL # damit auch aus 'monitoring' gelesen wird

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          isDefault: true
          url: http://kube-prometheus-stack-prometheus.monitoring.svc:9090
